mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)+段?")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)(段?)")
mention_duan
class(mention_duan)
# mention_duan
g<-paste0("(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)","段?")
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)(段?)")
mention_duan
class(mention_duan)
# mention_duan
g<-paste0("(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)","段?")
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)段?")
mention_duan
class(mention_duan)
# mention_duan
g<-paste0("(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)","段?")
mention_duan<-str_extract_all(context_picked_split,g)
mention_duan
class(mention_duan)
# mention_duan
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
context_picked_split
z<-str_view_all(context_picked_split,"段")
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
context_picked_split
z<-str_view_all(context_picked_split,"段")
z
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
#context_picked_split
z<-str_view_all(context_picked_split,"段")
z
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
#context_picked_split
z<-str_view_all(context_picked,"段")
z
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
#context_picked_split
z<-str_view_all(context_picked,"段")
z
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
#context_picked_split
z<-str_view_all(context_picked,"段")
z
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)"+"段?")
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)"+"段"?)
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)"+段"?)
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子")
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
mention_duan<-str_extract_all(context_picked_split[1],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
mention_duan<-unlist(mention_duan)
table_duan<-table(mention_duan)
# table_duan
mention_duan<-unlist(mention_duan)
table_duan<-table(mention_duan)
table_duan
place<-semiGodsSemiDevils$data[[1]]$section=="P2"
context_picked<-semiGodsSemiDevils$data[[1]]$text[place]
context_picked
# context_picked
place<-semiGodsSemiDevils$data[[1]]$section=="P2"
semiGodsSemiDevils$data[[1]]$text[place]
context_picked<-semiGodsSemiDevils$data[[1]]$text[place]
context_picked
# context_picked
knitr::opts_chunk$set(echo = TRUE)
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$性別 <-
factor(covid19$性別)
covid19$是否為境外移入 <-
factor(
covid19$是否為境外移入
)
# 可排序類別資料：年齡層
covid19$年齡層 <-
factor(
covid19$年齡層,
ordered=TRUE
)
# 可排序類別資料：年齡層
covid19$年齡層<-
factor(
covid19$年齡層,
ordered=TRUE
)
covid19$年齡層
jsonlite::fromJSON(
"https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
unlist(population) -> population
print(population)
class(population) # 判斷出是named integer vector
names(population) # 元素名稱是台灣各縣市
levels(covid19$縣市) # 是名稱字串向量
# 由於population元素值有names，可以用`[名稱字串向量]`取出所要的
levels(covid19$縣市) -> levelsInData
population[levelsInData] -> population
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$縣市
newLevels <- names(population)
newLevels
covid19$縣市 <-
factor(
covid19$縣市, levels=newLevels
)
levels(covid19$縣市)
covid19$縣市 <-
factor(
covid19$縣市, levels=newLevels
)
covid19$縣市
levels(covid19$縣市)
school<-differentMajors
oldlevels<-str_replace(school,"休運系|金融系","商學院")
oldlevels
oldlevels<-str_replace(school,"(經濟系|社會系|社工系)","社科院")
oldlevels
oldlevels<-str_replace(school,"(公行系|不動系)","公共事務學院")
school<-factor(school)
levels(school)
# school
school<-differentMajors
oldlevels<-str_replace(school,"休運系|金融系","商學院")
oldlevels
oldlevels<-str_replace(school,"(經濟系|社會系|社工系)","社科院")
oldlevels
oldlevels<-str_replace(school,"(公行系|不動系)","公共事務學院")
school<-factor(school)
levels(school)
# school
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
# Chunk 2: data1
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
# Chunk 3: ans11
studentHeights$`學年度`<-factor(studentHeights$`學年度`)
a=as.insteger(levels(studentHeights$`學年度`))
new1<-sort(a)
studentHeights$`學年度`<-factor(studentHeights$`學年度`,new1,ordered=T)
studentHeights$`年齡`<-as.integer(studentHeights$`年齡`)
studentHeights$`年齡`<-sort(studentHeights$`年齡`)
studentHeights$`年齡`<-factor(studentHeights$`年齡`,ordered=T)
studentHeights
# Chunk 4: ans12
studentHeights$`年齡層`<-factor(studentHeights$`年齡層`,ordered=TRUE)
c<-levels(studentHeights$`年齡層`)
new3<-stringr::str_extract(c,"^[0-9]+")
new3<-as.integer(new3)
names(new3)<-c
sort(new3) -> new3
studentHeights$`年齡層`<-
factor(studentHeights$`年齡層`, names(new3) )
levels(studentHeights$`年齡層`)
studentHeights$`年齡層`
# studentHeights$`年齡層`
# Chunk 5: ans13
str(studentHeights)
age1<-studentHeights$`年齡層`=="6-8"
all1<-studentHeights$`類別`=="總計"
average1<-studentHeights$`平均身高`[age1&all1]
average1<-mean(average1)
age2<-studentHeights$`年齡層`=="9-12"
all2<-studentHeights$`類別`=="總計"
average2<-studentHeights$`平均身高`[age2&all2]
average2<-mean(average2)
age3<-studentHeights$`年齡層`=="13-15"
all3<-studentHeights$`類別`=="總計"
average3<-studentHeights$`平均身高`[age3&all3]
average3<-mean(average3)
names(average1)<-"6-8"
names(average2)<-"9-12"
names(average3)<-"13-15"
averageHeightByGroup<-c(average1,average2,average3)
averageHeightByGroup
# Chunk 6: ans14
boy<-studentHeights$`類別`=="男"
girl<-studentHeights$`類別`=="女"
boy6<-studentHeights$`平均身高`[age1&boy]
boy6<-mean(boy6)
girl6<-studentHeights$`平均身高`[age1&girl]
girl6<-mean(girl6)
average6<-boy6-girl6
names(average6)<-"6-8"
boy9<-studentHeights$`平均身高`[age2&boy]
boy9<-mean(boy9)
girl9<-studentHeights$`平均身高`[age2&girl]
girl9<-mean(girl9)
average9<-boy9-girl9
names(average9)<-"9-12"
boy13<-studentHeights$`平均身高`[age3&boy]
boy13<-mean(boy13)
girl13<-studentHeights$`平均身高`[age3&girl]
girl13<-mean(girl13)
average13<-boy13-girl13
names(average13)<-"13-15"
genderDifferenceByAge<-c(average6,average9,average13)
genderDifferenceByAge
# heightDifferenceByGroup
# Chunk 7: data2
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
# Chunk 8: ans21
realEstateRegex<-"(不動產與?城鄉環?境?學系)"
# realEstateRegex
# Chunk 9
str_replace(differentMajors,realEstateRegex,"不動系")
# Chunk 10: ans22
currentLevels<-levels(factor(differentMajors))
currentLevels
# Chunk 11: ans23
bSchoolRegex <- "(休閒與運動管理學系|休運系|金融系|金融與合作經營學系|金融與合作學系)"
bSchoolRegex
# bSchoolRegex
# Chunk 12
str_replace(currentLevels,bSchoolRegex,"商學院")
# Chunk 13: ans24
differentMajors <- factor(differentMajors)
levels(differentMajors) <- c("不動系","不動系","不動系","公行系","公行系","公行系","休運系","休運系","社工系","社工系","社會系","社會系","金融系","金融系","金融系","經濟系","經濟系")
differentMajors
# differentMajors
# Chunk 14: ans25
school<-differentMajors
oldlevels<-str_replace(school,"休運系|金融系","商學院")
oldlevels
oldlevels<-str_replace(school,"(經濟系|社會系|社工系)","社科院")
oldlevels
oldlevels<-str_replace(school,"(公行系|不動系)","公共事務學院")
school<-factor(school)
levels(school)
# school
school<-differentMajors
bus<-
str_replace(school,"休運系|金融系","商學院")
oldlevels
str_replace(school,"經濟系|社會系|社工系","社科院")
oldlevels
str_replace(school,"公行系|不動系","公共事務學院")
school<-factor(school)
levels(school)
# school
school<-differentMajors
str_replace(school,"休運系|金融系","商學院")
oldlevels
str_replace(school,"經濟系|社會系|社工系","社科院")
oldlevels
str_replace(school,"公行系|不動系","公共事務學院")
school<-factor(school)
levels(school)
# school
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
# Chunk 2: data1
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
# Chunk 3: ans11
studentHeights$`學年度`<-factor(studentHeights$`學年度`)
a=as.insteger(levels(studentHeights$`學年度`))
new1<-sort(a)
studentHeights$`學年度`<-factor(studentHeights$`學年度`,new1,ordered=T)
studentHeights$`年齡`<-as.integer(studentHeights$`年齡`)
studentHeights$`年齡`<-sort(studentHeights$`年齡`)
studentHeights$`年齡`<-factor(studentHeights$`年齡`,ordered=T)
studentHeights
# Chunk 4: ans12
studentHeights$`年齡層`<-factor(studentHeights$`年齡層`,ordered=TRUE)
c<-levels(studentHeights$`年齡層`)
new3<-stringr::str_extract(c,"^[0-9]+")
new3<-as.integer(new3)
names(new3)<-c
sort(new3) -> new3
studentHeights$`年齡層`<-
factor(studentHeights$`年齡層`, names(new3) )
levels(studentHeights$`年齡層`)
studentHeights$`年齡層`
# studentHeights$`年齡層`
# Chunk 5: ans13
str(studentHeights)
age1<-studentHeights$`年齡層`=="6-8"
all1<-studentHeights$`類別`=="總計"
average1<-studentHeights$`平均身高`[age1&all1]
average1<-mean(average1)
age2<-studentHeights$`年齡層`=="9-12"
all2<-studentHeights$`類別`=="總計"
average2<-studentHeights$`平均身高`[age2&all2]
average2<-mean(average2)
age3<-studentHeights$`年齡層`=="13-15"
all3<-studentHeights$`類別`=="總計"
average3<-studentHeights$`平均身高`[age3&all3]
average3<-mean(average3)
names(average1)<-"6-8"
names(average2)<-"9-12"
names(average3)<-"13-15"
averageHeightByGroup<-c(average1,average2,average3)
averageHeightByGroup
# Chunk 6: ans14
boy<-studentHeights$`類別`=="男"
girl<-studentHeights$`類別`=="女"
boy6<-studentHeights$`平均身高`[age1&boy]
boy6<-mean(boy6)
girl6<-studentHeights$`平均身高`[age1&girl]
girl6<-mean(girl6)
average6<-boy6-girl6
names(average6)<-"6-8"
boy9<-studentHeights$`平均身高`[age2&boy]
boy9<-mean(boy9)
girl9<-studentHeights$`平均身高`[age2&girl]
girl9<-mean(girl9)
average9<-boy9-girl9
names(average9)<-"9-12"
boy13<-studentHeights$`平均身高`[age3&boy]
boy13<-mean(boy13)
girl13<-studentHeights$`平均身高`[age3&girl]
girl13<-mean(girl13)
average13<-boy13-girl13
names(average13)<-"13-15"
genderDifferenceByAge<-c(average6,average9,average13)
genderDifferenceByAge
# heightDifferenceByGroup
# Chunk 7: data2
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
# Chunk 8: ans21
realEstateRegex<-"(不動產與?城鄉環?境?學系)"
# realEstateRegex
# Chunk 9
str_replace(differentMajors,realEstateRegex,"不動系")
# Chunk 10: ans22
currentLevels<-levels(factor(differentMajors))
currentLevels
# Chunk 11: ans23
bSchoolRegex <- "(休閒與運動管理學系|休運系|金融系|金融與合作經營學系|金融與合作學系)"
bSchoolRegex
# bSchoolRegex
# Chunk 12
str_replace(currentLevels,bSchoolRegex,"商學院")
# Chunk 13: ans24
differentMajors <- factor(differentMajors)
levels(differentMajors) <- c("不動系","不動系","不動系","公行系","公行系","公行系","休運系","休運系","社工系","社工系","社會系","社會系","金融系","金融系","金融系","經濟系","經濟系")
differentMajors
# differentMajors
# Chunk 14: ans25
school<-differentMajors
str_replace(school,"休運系|金融系","商學院")
oldlevels
str_replace(school,"經濟系|社會系|社工系","社科院")
oldlevels
str_replace(school,"公行系|不動系","公共事務學院")
school<-factor(school)
levels(school)
# school
school<-differentMajors
bus<-"休運系|金融系"
soc<-"經濟系|社會系|社工系"
puc<-"公行系|不動系"
str_replace(school,bus,"商學院")
oldlevels
str_replace(school,soc,"社科院")
oldlevels
str_replace(school,puc,"公共事務學院")
school<-factor(school)
levels(school)
# school
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
# Chunk 2: data1
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
# Chunk 3: ans11
studentHeights$`學年度`<-factor(studentHeights$`學年度`)
a=as.insteger(levels(studentHeights$`學年度`))
new1<-sort(a)
studentHeights$`學年度`<-factor(studentHeights$`學年度`,new1,ordered=T)
studentHeights$`年齡`<-as.integer(studentHeights$`年齡`)
studentHeights$`年齡`<-sort(studentHeights$`年齡`)
studentHeights$`年齡`<-factor(studentHeights$`年齡`,ordered=T)
studentHeights
# Chunk 4: ans12
studentHeights$`年齡層`<-factor(studentHeights$`年齡層`,ordered=TRUE)
c<-levels(studentHeights$`年齡層`)
new3<-stringr::str_extract(c,"^[0-9]+")
new3<-as.integer(new3)
names(new3)<-c
sort(new3) -> new3
studentHeights$`年齡層`<-
factor(studentHeights$`年齡層`, names(new3) )
levels(studentHeights$`年齡層`)
studentHeights$`年齡層`
# studentHeights$`年齡層`
# Chunk 5: ans13
str(studentHeights)
age1<-studentHeights$`年齡層`=="6-8"
all1<-studentHeights$`類別`=="總計"
average1<-studentHeights$`平均身高`[age1&all1]
average1<-mean(average1)
age2<-studentHeights$`年齡層`=="9-12"
all2<-studentHeights$`類別`=="總計"
average2<-studentHeights$`平均身高`[age2&all2]
average2<-mean(average2)
age3<-studentHeights$`年齡層`=="13-15"
all3<-studentHeights$`類別`=="總計"
average3<-studentHeights$`平均身高`[age3&all3]
average3<-mean(average3)
names(average1)<-"6-8"
names(average2)<-"9-12"
names(average3)<-"13-15"
averageHeightByGroup<-c(average1,average2,average3)
averageHeightByGroup
# Chunk 6: ans14
boy<-studentHeights$`類別`=="男"
girl<-studentHeights$`類別`=="女"
boy6<-studentHeights$`平均身高`[age1&boy]
boy6<-mean(boy6)
girl6<-studentHeights$`平均身高`[age1&girl]
girl6<-mean(girl6)
average6<-boy6-girl6
names(average6)<-"6-8"
boy9<-studentHeights$`平均身高`[age2&boy]
boy9<-mean(boy9)
girl9<-studentHeights$`平均身高`[age2&girl]
girl9<-mean(girl9)
average9<-boy9-girl9
names(average9)<-"9-12"
boy13<-studentHeights$`平均身高`[age3&boy]
boy13<-mean(boy13)
girl13<-studentHeights$`平均身高`[age3&girl]
girl13<-mean(girl13)
average13<-boy13-girl13
names(average13)<-"13-15"
genderDifferenceByAge<-c(average6,average9,average13)
genderDifferenceByAge
# heightDifferenceByGroup
# Chunk 7: data2
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
# Chunk 8: ans21
realEstateRegex<-"(不動產與?城鄉環?境?學系)"
# realEstateRegex
# Chunk 9
str_replace(differentMajors,realEstateRegex,"不動系")
# Chunk 10: ans22
currentLevels<-levels(factor(differentMajors))
currentLevels
# Chunk 11: ans23
bSchoolRegex <- "(休閒與運動管理學系|休運系|金融系|金融與合作經營學系|金融與合作學系)"
bSchoolRegex
# bSchoolRegex
# Chunk 12
str_replace(currentLevels,bSchoolRegex,"商學院")
# Chunk 13: ans24
differentMajors <- factor(differentMajors)
levels(differentMajors) <- c("不動系","不動系","不動系","公行系","公行系","公行系","休運系","休運系","社工系","社工系","社會系","社會系","金融系","金融系","金融系","經濟系","經濟系")
differentMajors
# differentMajors
# Chunk 14: ans25
school<-differentMajors
bus<-"休運系|金融系"
soc<-"經濟系|社會系|社工系"
puc<-"公行系|不動系"
str_replace(school,bus,"商學院")
oldlevels
str_replace(school,soc,"社科院")
oldlevels
str_replace(school,puc,"公共事務學院")
school<-factor(school)
levels(school)
# school
school
school<-differentMajors
bus<-"休運系|金融系"
soc<-"經濟系|社會系|社工系"
puc<-"公行系|不動系"
school<-str_replace(school,bus,"商學院")
school<-str_replace(school,soc,"社科院")
school<-str_replace(school,puc,"公共事務學院")
school<-factor(school)
levels(school)
# school
