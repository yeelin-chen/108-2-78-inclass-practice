# popularSentenceMonth
popularSentenceMonth<-month(badEmployers$dt)[max(table(factor(month(badEmployers$dt))))]
badEmployers$dt<-ymd(badEmployers$dt)
table(factor(month(badEmployers$dt)))
popularSentenceMonth<-month(badEmployers$dt)[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(factor(month(badEmployers$dt)))
popularSentenceMonth<-month(badEmployers$dt)[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
violatedArticles<-levels(factor(badEmployers$law))
table_countsByArticle<-table(badEmployers$law)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
violatedArticles<-levels(factor(badEmployers$law))
violatedArticles
table_countsByArticle<-table(badEmployers$law)
table_countsByArticle
mostViolatedArticle<-table_countsByArticle[table_countsByArticle==max(table_countsByArticle)]
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
mostViolatedArticle
mostViolatedArticle_content<-badEmployers$lawContent[badEmployers$law[["勞動基準法第32條第2項"]]]
badEmployers$dt<-ymd(badEmployers$dt)
table(factor(month(badEmployers$dt)))
popularSentenceMonth<-month(badEmployers$dt)[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
factor(month(badEmployers$dt))
table(factor(month(badEmployers$dt)))
popularSentenceMonth<-month(badEmployers$dt)[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt)))
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt)))
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-month(badEmployers$dt)[max(table(month(badEmployers$dt)))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
max(table(month(badEmployers$dt)))
popularSentenceMonth<-month(badEmployers$dt)[max(table(month(badEmployers$dt)))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-factor(badEmployers$dt)[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-month(factor(badEmployers$dt))[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
as.factor(month(badEmployers$dt))
popularSentenceMonth<-month(factor(badEmployers$dt))[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-month(factor(badEmployers$dt))[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-as.integer(month(factor(badEmployers$dt))[max(table(factor(month(badEmployers$dt)))))]
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-as.integer(month(factor(badEmployers$dt)))[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-month(factor(badEmployers$dt))[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-month(badEmployers$dt)[max(table(factor(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-month(badEmployers$dt)[max(table(month(badEmployers$dt)))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
max(table(month(badEmployers$dt)))
popularSentenceMonth<-month(badEmployers$dt)[max(table(month(badEmployers$dt)))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
factor(max(table(month(badEmployers$dt))))
popularSentenceMonth<-month(badEmployers$dt)[max(table(month(badEmployers$dt)))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
factor(table(month(badEmployers$dt)))
popularSentenceMonth<-month(badEmployers$dt)[max(table(month(badEmployers$dt)))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
factor(table(month(badEmployers$dt)))
popularSentenceMonth<-month(badEmployers$dt)[factor(max(table(month(badEmployers$dt))))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-month(badEmployers$dt)[max(table(month(badEmployers$dt)))]
popularSentenceMonth
# popularSentenceMonth
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
popularSentenceMonth<-month(badEmployers$dt)names([max(table(month(badEmployers$dt)))])
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
names(month(badEmployers$dt([max(table(month(badEmployers$dt))])
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
names(month(badEmployers$dt[max(table(month(badEmployers$dt))])
badEmployers$dt<-ymd(badEmployers$dt)
table(month(badEmployers$dt))
names(month(badEmployers$dt[max(table(month(badEmployers$dt)))])
popularSentenceMonth<-month(badEmployers$dt)names[max(table(month(badEmployers$dt)))]
badEmployers$dt<-ymd(badEmployers$dt)
names(table(month(badEmployers$dt))==max(table(month(badEmployers$dt))))
names(month(badEmployers$dt[max(table(month(badEmployers$dt)))])
popularSentenceMonth<-month(badEmployers$dt)names[max(table(month(badEmployers$dt)))]
badEmployers$dt<-ymd(badEmployers$dt)
names(table(month(badEmployers$dt))==max(table(month(badEmployers$dt))))
month(badEmployers$dt[max(table(month(badEmployers$dt)))]
popularSentenceMonth<-month(badEmployers$dt)names[max(table(month(badEmployers$dt)))]
ntpu_namelist<-students10$`姓名`[stringr::str_detect(students10$`志願`, "北大")]
badEmployers$dt<-ymd(badEmployers$dt)
names(table(month(badEmployers$dt[table(month(badEmployers$dt))==max(table(month(badEmployers$dt)))]
month(badEmployers$dt[max(table(month(badEmployers$dt)))]
badEmployers$dt<-ymd(badEmployers$dt)
names(month(badEmployers$dt[table(month(badEmployers$dt))==max(table(month(badEmployers$dt)))]
month(badEmployers$dt[max(table(month(badEmployers$dt)))]
badEmployers$dt<-ymd(badEmployers$dt)
month(badEmployers$dt[table(month(badEmployers$dt))==max(table(month(badEmployers$dt)))]
month(badEmployers$dt[max(table(month(badEmployers$dt)))]
badEmployers$dt<-ymd(badEmployers$dt)
month(badEmployers$dt)[table(month(badEmployers$dt))==max(table(month(badEmployers$dt)))]
month(badEmployers$dt[max(table(month(badEmployers$dt)))]
popularSentenceMonth<-month(badEmployers$dt)names[max(table(month(badEmployers$dt)))]
badEmployers$dt<-ymd(badEmployers$dt)
badEmployers$dt[table(month(badEmployers$dt))==max(table(month(badEmployers$dt)))]
month(badEmployers$dt[max(table(month(badEmployers$dt)))]
popularSentenceMonth<-month(badEmployers$dt)names[max(table(month(badEmployers$dt)))]
knitr::opts_chunk$set(echo = TRUE)
example <- list(
name=c("小明","小花","小新","美美"),
height=c(175,166,170,160),
weight=c(77,NA,60,43),
birthday=lubridate::ymd(c("1998-03-11","1999-12-22","1995-08-22","2001-10-10")),
hobby=c("美食 旅遊","旅遊 時尚","3C 美食","音樂 旅遊"),
residence=c("Taipei","New Taipei","Taichung","Kaohsiung"),
allowance=factor(c("0-1000","1001-2000","2000+","1001-2000")),
bloodType=c("A","B","B","O")
)
example[c(name,birthday,hobby)]
example[c("name","birthday","hobby")]
example[c("name","birthday","hobby")]
example-aft1997<-example$birthday>=lubridate::ymd("1997-01-01")
example[c("name","birthday","hobby")]
example_aft1997<-example$birthday>=lubridate::ymd("1997-01-01")
example$name[]
example[c("name","birthday","hobby")]
example_aft1997<-example$birthday>=lubridate::ymd("1999-01-01")
example$name[]
example[c("name","birthday","hobby")]
example_aft1999<-example$birthday>=lubridate::ymd("1999-01-01")
example[c("name","birthday","hobby")]
example_aft1999<-example$birthday>=lubridate::ymd("1999-01-01")
example_aft1999
example[c("name","birthday","hobby")]
example_aft1999<-example$birthday>=lubridate::ymd("1999-01-01")
example_lovefood<-example$hobby::str_detect(example$hobby,"美食")
example[c("name","birthday","hobby")]
example_aft1999<-example$birthday>=lubridate::ymd("1999-01-01")
example_lovefood<-stringr::str_detect(example$hobby,"美食")
example_aft1999
example_lovefood
example[c("name","birthday","hobby")]
example_aft1999<-example$birthday>=lubridate::ymd("1999-01-01")
example_lovefood<-stringr::str_detect(example$hobby,"美食")
both<-example$name[example_aft1999&example_lovefood]
]
example[c("name","birthday","hobby")]
example_aft1999<-example$birthday>=lubridate::ymd("1999-01-01")
example_lovefood<-stringr::str_detect(example$hobby,"美食")
both<-example$name[example_aft1999&example_lovefood]
example_aft1999
example_lovefood
example[c("name","birthday","hobby")]
example_aft1999<-example$birthday>=lubridate::ymd("1999-01-01")
example_lovefood<-stringr::str_detect(example$hobby,"美食")
example$name[example_aft1999&example_lovefood]
example_aft1999
example_lovefood
example[c("name","birthday","hobby")]
example_aft1999<-example$birthday>=lubridate::ymd("1999-01-01")
example_lovefood<-stringr::str_detect(example$hobby,"美食")
example$name[example_aft1999&example_lovefood]
example[c("name","birthday","hobby")]
example_aft1998<-example$birthday>=lubridate::ymd("1998-01-01")
example_lovefood<-stringr::str_detect(example$hobby,"美食")
example$name[example_aft1998&example_lovefood]
install.packages("stringr")
install.packages("glue")
knitr::opts_chunk$set(echo = TRUE)
str_sub("410873002", 5, 6)
install.packages("stringr")
str_sub("410873002", 5, 6)
install.packages("stringr")
str_sub("410873002", 5, 6)
lubridate::ymd(
c(
"民國2019年12月05日",
"馬丁2019的12課05muydifícil",
"助教2019Emily12解說05真棒",
"2019R12課程05すごい",
"R程式2019的12期中考05とても変態"
)
)
install.packages("stringr")
str_sub("410873002", 5, 6)
install.packages("stringr")
install.packages("glue")
str_sub("410873002", 5, 6)
installed.packages("stringr")
installed.packages("glue")
str_sub("410873002", 5, 6)
str_extract_all(
c("民國108年12月5日","民國98年10月5日"),
"(?<=民國)[0-9]{2,3}(?=年)"
) # 回傳list
install.packages("stringr")
str_extract_all(
c("民國108年12月5日","民國98年10月5日"),
"(?<=民國)[0-9]{2,3}(?=年)"
) # 回傳list
install.packages("stringr")
str_extract_all(
c("民國108年12月5日","民國98年10月5日"),
"(?<=民國)[0-9]{2,3}(?=年)"
) # 回傳list
install.packages("stringr")
install.packages("glue")
str_sub("410873002", 5, 6)
str_extract_all(
c("民國108年12月5日","民國98年10月5日"),
"(?<=民國)[0-9]{2,3}(?=年)"
) # 回傳list
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
place<-semiGodsSemiDevils$data$section[[1]]=="P2"
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
place<-semiGodsSemiDevils$data$section[[1]]=="P2"
context_picked<-semiGodsSemiDevils$data[[1]]$text[place]
context_picked
# context_picked
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
place<-semiGodsSemiDevils$data$section[[1]]=="P2"
context_picked<-semiGodsSemiDevils$data[[1]]$text[place]
context_picked
# context_picked
place<-semiGodsSemiDevils$data[[1]]$section=="P2"
context_picked<-semiGodsSemiDevils$data[[1]]$text[place]
context_picked
# context_picked
str_split(textExample,"[:graph:]\\s\\s")
str_split(context_picked,"[:graph:]\\s\\s")
# context_picked_split
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
context_picked_split
# context_picked_split
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
str(context_picked_split)
# context_picked_split
context_picked_split[[1]]
str_extract_all(context_picked_split[[1]],"段")
# mention_duan
str_extract_all(context_picked_split[[1]],"段+")
# mention_duan
str_extract_all(context_picked_split,"段+")
# mention_duan
str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
str(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
str(mention_duan)
# mention_duan
View(context_picked_split)
mention_duan<-str_extract_all(context_picked_split[1],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
str(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
str(mention_duan)
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
context_picked_split[[1]]
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
class(context_picked_split[[1]])
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
class(mention_duan)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
place<-semiGodsSemiDevils$data[[1]]$section=="P2"
context_picked<-semiGodsSemiDevils$data[[1]]$text[place]
context_picked
# context_picked
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
context_picked_split
textExample <- c("段1......。　　段2....。")
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
context_picked_split
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)+段?")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子|段?)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)(段?)")
mention_duan
class(mention_duan)
# mention_duan
g<-paste0("(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)","段?")
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)(段?)")
mention_duan
class(mention_duan)
# mention_duan
g<-paste0("(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)","段?")
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)段?")
mention_duan
class(mention_duan)
# mention_duan
g<-paste0("(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)","段?")
mention_duan<-str_extract_all(context_picked_split,g)
mention_duan
class(mention_duan)
# mention_duan
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
context_picked_split
z<-str_view_all(context_picked_split,"段")
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
context_picked_split
z<-str_view_all(context_picked_split,"段")
z
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
#context_picked_split
z<-str_view_all(context_picked_split,"段")
z
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
#context_picked_split
z<-str_view_all(context_picked,"段")
z
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
#context_picked_split
z<-str_view_all(context_picked,"段")
z
context_picked_split<-str_split(context_picked,"[:graph:]\\s\\s")
#context_picked_split
z<-str_view_all(context_picked,"段")
z
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)"+"段?")
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)"+"段"?)
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)"+段"?)
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子")
mention_duan<-str_extract_all(context_picked_split,"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
# mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
class(mention_duan)
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
mention_duan<-str_extract_all(context_picked_split[1],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
mention_duan<-str_extract_all(context_picked_split[[1]],"(段譽|段兄|段兄弟|段大哥|段相公|段君|姓段的小子)")
mention_duan
mention_duan<-unlist(mention_duan)
table_duan<-table(mention_duan)
# table_duan
mention_duan<-unlist(mention_duan)
table_duan<-table(mention_duan)
table_duan
place<-semiGodsSemiDevils$data[[1]]$section=="P2"
context_picked<-semiGodsSemiDevils$data[[1]]$text[place]
context_picked
# context_picked
place<-semiGodsSemiDevils$data[[1]]$section=="P2"
semiGodsSemiDevils$data[[1]]$text[place]
context_picked<-semiGodsSemiDevils$data[[1]]$text[place]
context_picked
# context_picked
knitr::opts_chunk$set(echo = TRUE)
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$性別 <-
factor(covid19$性別)
covid19$是否為境外移入 <-
factor(
covid19$是否為境外移入
)
# 可排序類別資料：年齡層
covid19$年齡層 <-
factor(
covid19$年齡層,
ordered=TRUE
)
# 可排序類別資料：年齡層
covid19$年齡層<-
factor(
covid19$年齡層,
ordered=TRUE
)
covid19$年齡層
jsonlite::fromJSON(
"https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
unlist(population) -> population
print(population)
class(population) # 判斷出是named integer vector
names(population) # 元素名稱是台灣各縣市
levels(covid19$縣市) # 是名稱字串向量
# 由於population元素值有names，可以用`[名稱字串向量]`取出所要的
levels(covid19$縣市) -> levelsInData
population[levelsInData] -> population
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$縣市
newLevels <- names(population)
newLevels
covid19$縣市 <-
factor(
covid19$縣市, levels=newLevels
)
levels(covid19$縣市)
covid19$縣市 <-
factor(
covid19$縣市, levels=newLevels
)
covid19$縣市
levels(covid19$縣市)
