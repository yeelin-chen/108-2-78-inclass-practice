type_cpiByIncome<-unlist(type_cpiByIncome)
cpiValues<-type_cpiByIncome[pick]
# cpiValues
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
type_cpiByIncome<-map(cpiByIncome,~.x$TYPE)
type_cpiByIncome<-unlist(type_cpiByIncome)
cpiValues<-type_cpiByIncome[pick]
# cpiValues
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
type_cpiByIncome<-map(cpiByIncome,~.x$TYPE)
type_cpiByIncome<-unlist(type_cpiByIncome)
cpiValues<-type_cpiByIncome[pick]
cpiValues
# cpiValues
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
cpiValues
pick
cpiValues<-cpiByIncome[pick]
cpiValues
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
# Chunk 2: data1
jsonlite::fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=6020&md5_url=ceedea8b44b88a1bf46b48ab84b8742c", simplifyDataFrame = F) -> cpiByIncome
# Chunk 3: ans11
names_element1<-names(cpiByIncome[[1]])
names_element1
class(names_element1)
# names_element1
# Chunk 4: ans12
items<-factor(unlist(map(cpiByIncome,~.x$Item)))
items
# items
# Chunk 5: ans13
family_type<-items
family_type<-factor(family_type)
ft_levels<-levels(family_type)
new_levels<-str_extract(ft_levels,"[:graph:]+(?=#)")
new_levels->levels(family_type)
family_type<-factor(family_type,levels = c("全體家庭","最低20%所得家庭","中間60%所得家庭","最高20%所得家庭"))
family_type
# Chunk 6: ans14
subcategory<-factor(items)
subca_levels<-levels(subcategory)
new2_levels<-str_extract(subca_levels,"(?<=#)[:graph:]+(?=\\()")
levels(subcategory)<-new2_levels
subcategory
# subcategory
# Chunk 7: ans15
# subcategory
# Chunk 8: ans16
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
# Chunk 9: ans17
# allCPIdata
# Chunk 10: ans18
# allCPIdata2
# Chunk 11: ans19
# cpiGrowth_eachFamily
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
un_cpiByIncome<-unlist(cpiByIncome)
un_cpiByIncome
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
un_cpiByIncome<-unlist(cpiByIncome)
un_cpiByIncome
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
un_cpiByIncome
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
map(cpiByIncome, ~.x$TYPE=="原始值") -> check_step
unlist(check_step) -> pick_values
cpiByIncome[pick_values] -> cpiValues
# cpiValues
map(cpiByIncome, ~.x$TYPE=="原始值") -> check_step
unlist(check_step) -> pick_values
cpiByIncome[pick_values] -> cpiValues
cpiValues
# cpiValues
cpiValues
cpiValues$TIME_PERIOD
class(cpiValues)
View(cpiValues)
all_TIME_PERIOD<-map(cpiValues$TIME_PERIOD,~.ymd(x))
all_TIME_PERIOD
ymd(cpiValues$TIME_PERIOD)
all_TIME_PERIOD<-map(cpiValues$TIME_PERIOD,~ymd(.x))
all_TIME_PERIOD
all_TIME_PERIOD<-map(cpiValues,~ymd(.x$TIME_PERIOD))
all_TIME_PERIOD
map(cpiValues,~ymd(.x$TIME_PERIOD))
all_TIME_PERIOD<-map(cpiValues,~as.date(.x$TIME_PERIOD))
all_TIME_PERIOD
allCPIdata<-list(TIME_PERIOD,Item_VALUE,family_type,subcategory)
# allCPIdata
all_TIME_PERIOD<-map(cpiValues,~as.date(.x$TIME_PERIOD))
all_TIME_PERIOD
allCPIdata<-list(TIME_PERIOD,Item_VALUE,family_type,subcategory)
# allCPIdata
class(cpiValues$TIME_PERIOD)
class(cpiValues$TIME_PERIOD)
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
# Chunk 2: data1
jsonlite::fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=6020&md5_url=ceedea8b44b88a1bf46b48ab84b8742c", simplifyDataFrame = F) -> cpiByIncome
# Chunk 3: ans11
names_element1<-names(cpiByIncome[[1]])
names_element1
class(names_element1)
# names_element1
# Chunk 4: ans12
items<-factor(unlist(map(cpiByIncome,~.x$Item)))
items
# items
# Chunk 5: ans13
family_type<-items
family_type<-factor(family_type)
ft_levels<-levels(family_type)
new_levels<-str_extract(ft_levels,"[:graph:]+(?=#)")
new_levels->levels(family_type)
family_type<-factor(family_type,levels = c("全體家庭","最低20%所得家庭","中間60%所得家庭","最高20%所得家庭"))
family_type
# Chunk 6: ans14
subcategory<-factor(items)
subca_levels<-levels(subcategory)
new2_levels<-str_extract(subca_levels,"(?<=#)[:graph:]+(?=\\()")
levels(subcategory)<-new2_levels
subcategory
# subcategory
# Chunk 7: ans15
# subcategory
# Chunk 8: ans16
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
# Chunk 9: ans17
class(cpiValues$TIME_PERIOD)
all_TIME_PERIOD<-map(cpiValues,~as.date(.x$TIME_PERIOD))
all_TIME_PERIOD
allCPIdata<-list(TIME_PERIOD,Item_VALUE,family_type,subcategory)
# allCPIdata
# Chunk 10: ans18
# allCPIdata2
# Chunk 11: ans19
# cpiGrowth_eachFamily
class(cpiValues$TIME_PERIOD)
all_TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
all_TIME_PERIOD<-ymd(unlist(all_TIME_PERIOD))
all_Item_VALUE<-map(cpiValues,~.x$Item_VALUE)
allCPIdata<-list(TIME_PERIOD=all_TIME_PERIOD,Item_VALUE=all_Item_VALUE,family_type=family_type,subcategory=subcategor)
# allCPIdata
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
# Chunk 2: data1
jsonlite::fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=6020&md5_url=ceedea8b44b88a1bf46b48ab84b8742c", simplifyDataFrame = F) -> cpiByIncome
# Chunk 3: ans11
names_element1<-names(cpiByIncome[[1]])
names_element1
class(names_element1)
# names_element1
# Chunk 4: ans12
items<-factor(unlist(map(cpiByIncome,~.x$Item)))
items
# items
# Chunk 5: ans13
family_type<-items
family_type<-factor(family_type)
ft_levels<-levels(family_type)
new_levels<-str_extract(ft_levels,"[:graph:]+(?=#)")
new_levels->levels(family_type)
family_type<-factor(family_type,levels = c("全體家庭","最低20%所得家庭","中間60%所得家庭","最高20%所得家庭"))
family_type
# Chunk 6: ans14
subcategory<-factor(items)
subca_levels<-levels(subcategory)
new2_levels<-str_extract(subca_levels,"(?<=#)[:graph:]+(?=\\()")
levels(subcategory)<-new2_levels
subcategory
# subcategory
# Chunk 7: ans15
# subcategory
# Chunk 8: ans16
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
# Chunk 9: ans17
all_TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
all_TIME_PERIOD<-ymd(unlist(all_TIME_PERIOD))
all_Item_VALUE<-map(cpiValues,~.x$Item_VALUE)
allCPIdata<-list(TIME_PERIOD=all_TIME_PERIOD,Item_VALUE=all_Item_VALUE,family_type=family_type,subcategory=subcategor)
# allCPIdata
# Chunk 10: ans18
# allCPIdata2
# Chunk 11: ans19
# cpiGrowth_eachFamily
allCPIdata<-list(TIME_PERIOD,Item_VALUE,family_type,subcategory)
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
TIME_PERIOD.
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
TIME_PERIOD<-ymd(unlist(TIME_PERIOD))
Item_VALUE<-map(cpiValues,~.x$Item_VALUE)
allCPIdata<-list(
TIME_PERIOD=map(cpiValues,~.x$TIME_PERIOD),
Item_VALUE=-ymd(unlist(TIME_PERIOD)),
family_type,
subcategory)
# allCPIdata
TIME_PERIOD
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
# Chunk 2: data1
jsonlite::fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=6020&md5_url=ceedea8b44b88a1bf46b48ab84b8742c", simplifyDataFrame = F) -> cpiByIncome
# Chunk 3: ans11
names_element1<-names(cpiByIncome[[1]])
names_element1
class(names_element1)
# names_element1
# Chunk 4: ans12
items<-factor(unlist(map(cpiByIncome,~.x$Item)))
items
# items
# Chunk 5: ans13
family_type<-items
family_type<-factor(family_type)
ft_levels<-levels(family_type)
new_levels<-str_extract(ft_levels,"[:graph:]+(?=#)")
new_levels->levels(family_type)
family_type<-factor(family_type,levels = c("全體家庭","最低20%所得家庭","中間60%所得家庭","最高20%所得家庭"))
family_type
# Chunk 6: ans14
subcategory<-factor(items)
subca_levels<-levels(subcategory)
new2_levels<-str_extract(subca_levels,"(?<=#)[:graph:]+(?=\\()")
levels(subcategory)<-new2_levels
subcategory
# subcategory
# Chunk 7: ans15
# subcategory
# Chunk 8: ans16
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
# Chunk 9: ans17
# allCPIdata
# Chunk 10: ans18
# allCPIdata2
# Chunk 11: ans19
# cpiGrowth_eachFamily
map(allCPIdata,~.x$TIME_PERIOD)
map(cpiValues,~.x$TIME_PERIOD)
unlist(map(cpiValues,~.x$TIME_PERIOD))
ymd(unlist(map(cpiValues,~.x$TIME_PERIOD)))
ymd(map(cpiValues,~.x$TIME_PERIOD))
map(cpiValues,~.x$TIME_PERIOD)
map(TIME_PERIOD,~.ymd(x))
map(TIME_PERIOD,~.ymd(x))
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
map(TIME_PERIOD,~.ymd(x))
allCPIdata <-list(
TIME_PERIOD=,
Item_VALUE=,
family_type=,
subcategory
)
# allCPIdata
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
# Chunk 2: data1
jsonlite::fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=6020&md5_url=ceedea8b44b88a1bf46b48ab84b8742c", simplifyDataFrame = F) -> cpiByIncome
# Chunk 3: ans11
names_element1<-names(cpiByIncome[[1]])
names_element1
class(names_element1)
# names_element1
# Chunk 4: ans12
items<-factor(unlist(map(cpiByIncome,~.x$Item)))
items
# items
# Chunk 5: ans13
family_type<-items
family_type<-factor(family_type)
ft_levels<-levels(family_type)
new_levels<-str_extract(ft_levels,"[:graph:]+(?=#)")
new_levels->levels(family_type)
family_type<-factor(family_type,levels = c("全體家庭","最低20%所得家庭","中間60%所得家庭","最高20%所得家庭"))
family_type
# Chunk 6: ans14
subcategory<-factor(items)
subca_levels<-levels(subcategory)
new2_levels<-str_extract(subca_levels,"(?<=#)[:graph:]+(?=\\()")
levels(subcategory)<-new2_levels
subcategory
# subcategory
# Chunk 7: ans15
# subcategory
# Chunk 8: ans16
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
# Chunk 9: ans17
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
allCPIdata <-list(
TIME_PERIOD=,
Item_VALUE=,
family_type=,
subcategory
)
# allCPIdata
# Chunk 10: ans18
# allCPIdata2
# Chunk 11: ans19
# cpiGrowth_eachFamily
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
TIME_PERIOD
unlist(TIME_PERIOD)
ymd(unlist(TIME_PERIOD))
unlist(TIME_PERIOD)
map(vec_TIME_PERIOD,~.paste0(x,"-01"))
map(vec_TIME_PERIOD,~paste0(.x,"-01"))
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
vec_TIME_PERIOD<-unlist(TIME_PERIOD)
map(vec_TIME_PERIOD,~paste0(.x,"-01"))
map(TIME_PERIOD,~paste0(.x,"-01"))
TIME_PERIO<-ymd(vec_TIME_PERIOD)
TIME_PERIOD<-ymd(vec_TIME_PERIOD)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
mostViolatedArticle_content<-badEmployers$lawContent[badEmployers$law=="勞動基準法第32條第2項"]
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
violatedArticles<-levels(factor(badEmployers$law))
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
violatedArticles<-levels(factor(badEmployers$law))
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
factor(table$國文,levels=table$國文[c(16:1)],ordered=T) ->
chinese
# chinese
View(table)
View(students10)
# Chunk 1: setup
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
# Chunk 2: data1
jsonlite::fromJSON("https://quality.data.gov.tw/dq_download_json.php?nid=6020&md5_url=ceedea8b44b88a1bf46b48ab84b8742c", simplifyDataFrame = F) -> cpiByIncome
# Chunk 3: ans11
names_element1<-names(cpiByIncome[[1]])
names_element1
class(names_element1)
# names_element1
# Chunk 4: ans12
items<-factor(unlist(map(cpiByIncome,~.x$Item)))
items
# items
# Chunk 5: ans13
family_type<-items
family_type<-factor(family_type)
ft_levels<-levels(family_type)
new_levels<-str_extract(ft_levels,"[:graph:]+(?=#)")
new_levels->levels(family_type)
family_type<-factor(family_type,levels = c("全體家庭","最低20%所得家庭","中間60%所得家庭","最高20%所得家庭"))
family_type
# Chunk 6: ans14
subcategory<-factor(items)
subca_levels<-levels(subcategory)
new2_levels<-str_extract(subca_levels,"(?<=#)[:graph:]+(?=\\()")
levels(subcategory)<-new2_levels
subcategory
# subcategory
# Chunk 7: ans15
# subcategory
# Chunk 8: ans16
pick<-map(cpiByIncome,~.x$TYPE=="原始值")
pick<-unlist(pick)
cpiValues<-cpiByIncome[pick]
cpiValues
# cpiValues
# Chunk 9: ans17
TIME_PERIOD<-map(cpiValues,~.x$TIME_PERIOD)
new_TIME_PERIOD<-map(TIME_PERIOD,~paste0(.x,"-01"))
vec_TIME_PERIOD<-unlist(new_TIME_PERIOD)
TIME_PERIOD<-ymd(vec_TIME_PERIOD)
map(cpiValues,~.x$Item_VALUE)%>%
as.numeric(.)-> Item_VALUE
allCPIdata <-list(
TIME_PERIOD=TIME_PERIOD,
Item_VALUE= Item_VALUE,
family_type=,
subcategory
)
# allCPIdata
# Chunk 10: ans18
# allCPIdata2
# Chunk 11: ans19
# cpiGrowth_eachFamily
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); library(purrr); library(magrittr)
data228 <- readr::read_csv("https://www.dropbox.com/s/64yf3uq8wtvb5q7/%E4%BA%8C%E4%BA%8C%E5%85%AB%E4%BA%8B%E4%BB%B6%E4%BA%BA%E5%90%8D%E7%B4%A2%E5%BC%95.csv?dl=1")
View(data228)
str(data228)
data228$檔號[[1]]
data228$`檔號`[[1]]
map(data228,~.x[[1]])
str(data228)
map(data228$`檔號`,~.x)
spl_num<-str_split(numaber,"/")
str(data228)
number<-map(data228$`檔號`,~.x)
spl_num<-str_split(number,"/")
spl_num
data228$`全宗名編號`<-unlist(map(spl_num,~.x[[1]]))
number<-map(data228$`檔號`,~.x)
spl_num<-str_split(number,"/")
data228$`全宗名編號`<-unlist(map(spl_num,~.x[[1]]))
number<-map(data228$`檔號`,~.x)
spl_num<-str_split(number,"/")
data228$`全宗名編號`<-unlist(map(spl_num,~.x[[1]]))
data228$`全宗名編號`
pick_note <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
num_pick<- data228$`檔號` == "A803000000A/0036/340.2/5502.3/19/007"
victims <- data228$`個人名稱`[pick_note & num_pick]
class(victims)
victims
pick_note
pick_note
num_pick<- data228$`檔號` == "A80300
num_pick<- data228$`檔號` == "A80300
pick_note <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
pick_note
pick_note <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
num_pick<- data228$`檔號`[pick_note]
num_pick
pick_note <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
num_pickall<- data228$`檔號`[pick_note]
num_pick<-num_pickall[1]
victims <- data228$`個人名稱`[data228$'檔號`== num_pick ]
class(victims)
victims
victims <- data228$`個人名稱`[data228$`檔號`== num_pick ]
pick_note <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
num_pickall<- data228$`檔號`[pick_note]
num_pick<-num_pickall[1]
victims <- data228$`個人名稱`[data228$`檔號`== num_pick ]
class(victims)
victims
length(victims)
pick_note <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
num_pickall<- data228$`檔號`[pick_note]
num_pick<-num_pickall[1]
victims <- data228$`個人名稱`[data228$`檔號`== num_pick ]
class(victims)
length(victims)
num_pickall
num_pick
victims
pick_note <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
num_pickall<- data228$`檔號`[pick_note]
num_pick<-num_pickall[1]
victims <- data228$`個人名稱`[data228$`檔號`== num_pick ]
uniqe(victims)
pick_note <- data228$`附註` == "表冊名稱:臺灣省二二八事變正法及死亡人犯名冊"
num_pickall<- data228$`檔號`[pick_note]
num_pick<-num_pickall[1]
victims <- data228$`個人名稱`[data228$`檔號`== num_pick ]
unique(victims)
victims<-unique(victims)
class(victims)
length(victims)
