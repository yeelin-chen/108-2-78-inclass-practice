num
num=seatingChart$row1[map(seatingChart$row1,~.x)!=-1]
num=paste0("-",names(num))
num
unlist(map(row,~paste0(.x,num)))
list_availableSeats<-function(seatingChart){
num=seatingChart$row1[map(seatingChart$row1,~.x)!=-1]
num=paste0("-",names(num))
row=names(map(seatingChart,~.x))
unlist(map(row,~paste0(.x,num)))
}
# list_availableSeats
list_availableSeats<-function(seatingChart){
num=seatingChart$row1[map(seatingChart$row1,~.x)!=-1]
num=paste0("-",names(num))
row=names(map(seatingChart,~.x))
return(unlist(map(row,~paste0(.x,num))))
}
list_availableSeats
# list_availableSeats
list_availableSeats<-function(seatall){
num=seatingChart$row1[map(seatall$row1,~.x)!=-1]
num=paste0("-",names(num))
row=names(map(seatall,~.x))
return(unlist(map(row,~paste0(.x,num))))
}
list_availableSeats
# list_availableSeats
list_availableSeats(seatingChart)
best_choice<-function(c){
if(c[[3]]<30&c[[1]]>5){"少消費蛋糕、多消費甜甜圈"
}else if(c[[3]]<30&c[[1]]<5){"多消費蛋糕、少消費甜甜圈"
}else{"維持現有消費組合"
}
}
best_choice(bear[6,])
best_choice
# best_choice
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate); library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/api/datasets/C3FFC733-C2E3-42C6-9C14-CDDDDF3D2AEC/json/preview") -> ntpc_building_info
pickpark<-str_detect(ntpc_building_info$name,"停車場")
info_park<-map(ntpc_building_info,~.x[pickpark])
ntpc_building_parking<-data.frame(type=info_park[[1]],floer=info_park[[2]],name=info_park[[3]],name_en=info_park[[4]])
ntpc_building_parking
# ntpc_building_parking
no_found<-function(k){ if(sum(str_detect(ntpc_building_info$name,k))==0){warning("No Found")
}
}
# no_found
search_engine<-function(k){
if(sum(str_detect(ntpc_building_info$name,k))==0){warning("No Found")
}else{
pick_k<-str_detect(ntpc_building_info$name,k)
info_k<-map(ntpc_building_info,~.x[pick_k])
ntpc_building_k<-data.frame(type=info_k[[1]],floer=info_k[[2]],name=info_k[[3]],name_en=info_k[[4]])
return(ntpc_building_k)
}
}
search_engine
# search_engine
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear
best_choice<-function(c){
if(c[[3]]<30&c[[1]]>5){"少消費蛋糕、多消費甜甜圈"
}else if(c[[3]]<30&c[[1]]<5){"多消費蛋糕、少消費甜甜圈"
}else{"維持現有消費組合"
}
}
best_choice(bear[6,])
best_choice
# best_choice
browseURL("https://docs.google.com/spreadsheets/d/1bdb4XPEwrQByujQ79PeQ5D0V_157ouRrRVDiA9cs3B0/edit#gid=0")
seatingChart<-list(
row1=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row2=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row3=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row4=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row5=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row6=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row7=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0))
seatingChart
# seatingChart
list_availableSeats<-function(seatall){
num=seatingChart$row1[map(seatall$row1,~.x)!=-1]
num=paste0("-",names(num))
row=names(map(seatall,~.x))
return(unlist(map(row,~paste0(.x,num))))
}
list_availableSeats(seatingChart)
list_availableSeats
# list_availableSeats
names(num)
num=seatingChart$row1[map(seatall$row1,~.x)!=-1]
list_availableSeats<-function(seatall){
num=seatingChart$row1[map(seatall$row1,~.x)!=-1]
num=paste0("-",names(num))
row=names(map(seatall,~.x))
return(unlist(map(row,~paste0(.x,num))))
names(num)
}
names(num)
list_availableSeats<-function(seatall){
num=seatingChart$row1[map(seatall$row1,~.x)!=-1]
num=paste0("-",names(num))
row=names(map(seatall,~.x))
return(unlist(map(row,~paste0(.x,num))))
}
list_availableSeats(seatingChart)
list_availableSeats
# list_availableSeats
str_extract(selectedSeat,"^[:digit:]")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]+3[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
seatingChart["re_row"]["re_num"]<--1
}
}
# update_seatingChart
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]+3[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
seatingChart["re_row"]["re_num"]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
# update_seatingChart
update_seatingChart(seatingChart, "row1-7")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]+3[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
listname=seatingChart[seatingChart==rm_row]
seatingChart[listname]["re_num"]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart, "row1-7")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]+3[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
listname=seatingChart[seatingChart==rm_row]
seatingChart[listname]["re_num"]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart, "row1-7")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]+3[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
seatingChart[seatingChart==rm_row][names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart, "row1-7")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]+3[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart[needrow][names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart, "row1-7")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]+3[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart$needrow[names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart, "row1-7")
update_seatingChart
# update_seatingChart
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate); library(jsonlite)
browseURL("https://docs.google.com/spreadsheets/d/1bdb4XPEwrQByujQ79PeQ5D0V_157ouRrRVDiA9cs3B0/edit#gid=0")
seatingChart<-list(
row1=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row2=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row3=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row4=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row5=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row6=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0),
row7=c("7"=0,"5"=0,"A1"=-1,"3"=0,"1"=0,"2"=0,"4"=0,"A2"=-1,"6"=0))
seatingChart
# seatingChart
list_availableSeats<-function(seatall){
num=seatingChart$row1[map(seatall$row1,~.x)!=-1]
num=paste0("-",names(num))
row=names(map(seatall,~.x))
return(unlist(map(row,~paste0(.x,num))))
}
list_availableSeats(seatingChart)
list_availableSeats
# list_availableSeats
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]+3[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart$needrow[names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart, "row1-7")
update_seatingChart
# update_seatingChart
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]+3[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart$needrow[names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart,"row1-7")
update_seatingChart
# update_seatingChart
```{r}
str_extract("row1-7","[:lower:]+3[:digit:]")
```
library(stringr)
str_extract("row1-7","[:lower:]+3[:digit:]")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]{1,3}[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart$needrow[names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart,"row1-7")
update_seatingChart
# update_seatingChart
library(stringr)
str_extract("row1-7","[:lower:]{1,3}[:digit:]"")
library(stringr)
str_extract("row1-7","[:lower:]{1,3}[:digit:]")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]{1,3}[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart$needrow[names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart,"row1-7")
update_seatingChart
# update_seatingChart
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]{1,3}[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart[needrow][names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart,"row1-7")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]{1,3}[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart[needrow]
[names(seatingChart$row1)==re_num]<--1
jsonlite::fromJSON("https://www.dropbox.com/s/eb4xcfp97ro7m3y/animal_names.json?dl=1") -> animal_friends
animal15 <- animal_friends[1:15]
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]{1,3}[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart[needrow]
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart,"row1-7")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]{1,3}[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChartseatingChart[spaceseat==re_num][names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart,"row1-7")
update_seatingChart<-function(seatingChart, selectedSeat){
spaceseat<-list_availableSeats(seatingChart)
if(selectedSeat%in%spaceseat){
rm_row=str_extract(selectedSeat,"[:lower:]{1,3}[:digit:]")
re_num=str_extract(selectedSeat,"(?=-)[:digit:]")
needrow=seatingChart[seatingChart==rm_row]
seatingChart[spaceseat==re_num][names(seatingChart$row1)==re_num]<--1
return(seatingChart)
}else{
warning("很抱歉您所選的位置已無法選")
return(seatingChart)
}
}
update_seatingChart(seatingChart,"row1-7")
jsonlite::fromJSON("https://www.dropbox.com/s/eb4xcfp97ro7m3y/animal_names.json?dl=1") -> animal_friends
animal15 <- animal_friends[1:15]
knitr::opts_chunk$set(echo = TRUE)
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
knitr::opts_chunk$set(echo = TRUE)
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
knitr::opts_chunk$set(echo = TRUE)
grade <- sample(1:100, 10, replace=T)
grade %>%
cut(c(-1,69,79,89,100)) -> grade
grade <- sample(1:100, 10, replace=T)
grade %>%
cut(c(-1,69,79,89,100)) -> grade
grade <- sample(1:100, 10, replace=T)
grade <- sample(1:100, 10, replace=T)
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
grade <- sample(1:100, 10, replace=T)
grade
grade %>%cut(c(-1,69,79,89,100)) -> grade
grade <- sample(1:100, 10, replace=T)
grade
grade %>%cut(c(-1,69,79,89,100)) -> grade
grade <- sample(1:100, 10, replace=T)
grade
grade %>% cut(c(-1,69,79,89,100)) -> grade
a <- c(1,2,3)
cut(a, c(1,2,3))
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId
knitr::opts_chunk$set(echo = TRUE)
grade <- sample(0:100,10,replace = T)
cut(grade,c(-1,69,79,89,100)) -> grade
levels(factor(grade))
switch(as.character(grade[[1]]),   ##取出第一個   ##但其實題目不是要print ABCD
"(89,100]"=paste0("A","好棒棒"),
"(79,89]"=paste0("B","好棒"),
"(69,79]"=paste0("C","棒"),
"(-1,69]"=paste0("F","-_-")
)
grade <- sample(0:100,10,replace = T)
grade
cut(grade,c(-1,69,79,89,100)) -> grade
levels(factor(grade))
switch(as.character(grade[[1]]),   ##取出第一個   ##但其實題目不是要print ABCD
"(89,100]"=paste0("A","好棒棒"),
"(79,89]"=paste0("B","好棒"),
"(69,79]"=paste0("C","棒"),
"(-1,69]"=paste0("F","-_-")
)
grade <- sample(0:100,10,replace = T)
grade
cut(grade,c(-1,69,79,89,100)) -> grade_interval
levels(factor(grade))
switch(as.character(grade[[1]]),   ##取出第一個   ##但其實題目不是要print ABCD
"(89,100]"=paste0("A","好棒棒"),
"(79,89]"=paste0("B","好棒"),
"(69,79]"=paste0("C","棒"),
"(-1,69]"=paste0("F","-_-")
)
grade <- sample(0:100,10,replace = T)
grade
cut(grade,c(-1,69,79,89,100)) -> grade_interval
levels(factor(grade_interval))
switch(as.character(grade[[1]]),   ##取出第一個   ##但其實題目不是要print ABCD
"(89,100]"=paste0("A","好棒棒"),
"(79,89]"=paste0("B","好棒"),
"(69,79]"=paste0("C","棒"),
"(-1,69]"=paste0("F","-_-")
)
grade <- sample(0:100,10,replace = T)
grade
cut(grade,c(-1,69,79,89,100)) -> grade_interval
levels(grade_interval)
switch(as.character(grade[[1]]),   ##取出第一個   ##但其實題目不是要print ABCD
"(89,100]"=paste0("A","好棒棒"),
"(79,89]"=paste0("B","好棒"),
"(69,79]"=paste0("C","棒"),
"(-1,69]"=paste0("F","-_-")
)
knitr::opts_chunk$set(echo = TRUE)
n<- 0.8
conditionExpression_outcome <-
if(n>=1){
ifelse(n %% 2==0 , "even", "odd") }else{"warning"}
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"={fvalue <- -(n+1)/2},# 奇數；只有一行指令可省略{}
{ fvalue<-warning("n要整數喔")}
)
print(fvalue)
fun12<-function(n){
conditionExpression_outcome <-
if(n>=1){
ifelse(n %% 2==0 , "even", "odd") }else{"warning"}
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"={fvalue <- -(n+1)/2},# 奇數；只有一行指令可省略{}
{ warning("n要整數喔")}
)
}
fun12<-function(n){
conditionExpression_outcome <-
if(n>=1){
ifelse(n %% 2==0 , "even", "odd") }else{"warning"}
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"={fvalue <- -(n+1)/2},# 奇數；只有一行指令可省略{}
{ warning("n要整數喔")}
)
}
fun12(0.8)
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate)
fun12<-function(n){
conditionExpression_outcome <-
if(n>=1){
ifelse(n %% 2==0 , "even", "odd") }else{"warning"}
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"={fvalue <- -(n+1)/2},# 奇數；只有一行指令可省略{}
{ warning("n要整數喔")}
)
}
fun12(0.8)
fun12<-function(n){
conditionExpression_outcome <-
if(n>=1){
ifelse(n %% 2==0 , "even", "odd") }else{"warning"}
switch(
conditionExpression_outcome,
"even"={fvalue <- n/2}, # 偶數
"odd"={fvalue <- -(n+1)/2},# 奇數；只有一行指令可省略{}
warning("n要整數喔")
)
}
fun12(0.8)
readline("輸入你的學號") -> studentID
