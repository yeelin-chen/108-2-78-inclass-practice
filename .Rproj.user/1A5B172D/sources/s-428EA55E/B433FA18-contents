---
---
```{r}
library(jsonlite)
fromJSON("https://data.tainan.gov.tw/dataset/4cd9345a-04bf-4328-a97d-314ff78b4763/resource/afc025fc-1ef4-447c-b785-a680391d0ca1/download/tnsport2.json", simplifyDataFrame = F) -> tainanSportsMap
```
```{r}
tainanSportsMap[[1]]
```
```{r}
tfboys<-c("kevin","roy","jacjson")
length(tfboys)
```
```{r}
tfboys[[2]]
tfboys$jackson
#?向量中無法用$以元素的名字找元素?
```

```{r}
listExample <- 
  list(
    student="小明",
    `學期`=list(
      `108-1`=list(
        list(
          name="個體經濟學",
          teacher="Alice",
          grade=85
        )
      ),
      `108-2`=list(
        list(
          name="總體經濟學",
          teacher="Mark",
          grade=78
        )
      )
    )
  )
# 有多少位置可選：
length(listExample)

#只會顯示最外面的那個list中有幾個元素
```
```{r}
listExample[[2]]
```
```{r}
listExample$student
listExample$`學期`
listExample[["學期"]]
listExample[["student"]]
`學期`$`108-1`
#為什麼不行
```

```{r}
listExample[["學期"]]
listExample[["108-1"]]
```

```{r}
listExample[["student"]]
#加""要找一個叫student的變數名稱
listExample[[student]]
#被認為要找一個叫student的變數值

```

```{r}
#修正
student<-"student"
listExample[[student]]
```





```{r}
library(jsonlite)
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
         simplifyDataFrame = F) -> newTaipeiCityVaccine
```

```{r}
str(newTaipeiCityVaccine,max.level = 2)
length(newTaipeiCityVaccine)
#知道第一個大list有幾個元素
names(newTaipeiCityVaccine)
#知道他大list的物件名稱
```

```{r}
newTaipeiCityVaccine[[1]]
str(newTaipeiCityVaccine[[1]])

newTaipeiCityVaccine$result
str(newTaipeiCityVaccine$result,max.level = 1)

```

```{r}
newTaipeiCityVaccine[["result"]]
newTaipeiCityVaccine[["success"]]
```


```{r}
tfboys<-c("kevin","roy","jacjson")
tfboys[c(3,1,2)]
tfboys[c(1,2)]
tfboys[c("kevin","jacjson")]

```

```{r}
vectorExample <- c("小明","小英","大雄")
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果

vectorExample[c("小明","大雄")]
vectorExample$大雄
#以下2行無法執行是因為小明跟大雄都是元素(變數)值，他們沒有變數的名稱
```

```{r}
listExample <- 
  list(
    student="小明",
    `學期`=list(
      `108-1`=list(
        list(
          name="個體經濟學",
          teacher="Alice",
          grade=85
        )
      ),
      `108-2`=list(
        list(
          name="總體經濟學",
          teacher="Mark",
          grade=78
        )
      )
    )
  )
# 有多少位置可選：
length(listExample)
```

```{r}
str(listExample,max.level = 1)
listExample[c(2,1)]
listExample[c("學期","student")]
```

```{r}
library(jsonlite)
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
```

```{r}
str(taipeiNightMarkets)
```

```{r}
length(taipeiNightMarkets)
names(taipeiNightMarkets)
str(taipeiNightMarkets[3],max.level = 1)
str(taipeiNightMarkets$西昌街觀光夜市,max.level = 1)
str(taipeiNightMarkets[c(3,5)],max.level = 1)
str(taipeiNightMarkets[c("廣州街觀光夜市","西昌街觀光夜市")],max.level = 1)
```





```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
