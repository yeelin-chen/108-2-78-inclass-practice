"0","askSilly_weather3<-function(cityvec,dateInput){"
"0","  evercity_tem<-c()"
"0","  locationInput_vec<-unlist(map(cityvec,~.x))"
"0","  for(locationInput in 1:length(locationInput_vec)){"
"0","    function(locationInput){"
"0","  if(!exists(""weather_next36hours"")){"
"0","      jsonlite::fromJSON(""https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON"") ->"
"0","      weather_next36hours"
"0","    SOAR::Store(weather_next36hours) # 存在.R_cache environment中"
"0","  }  "
"0","  (weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location"
"0","  "
"0","  weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation"
"0","  (weatherAtLocation$elementName==""MaxT"") ->"
"0","    pick_MaxT"
"0","  (weatherAtLocation$elementName==""MinT"") ->"
"0","    pick_MinT"
"0","  weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT"
"0","  weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT"
"0","  "
"0","  glue::glue(""{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。"")->onecity_tem"
"0","   evercity_tem<- c(evercity_tem,onecity_tem)"
"0","}"
"0",""
"0","    "
"0","    "
"0","  }"
"0","  return(evercity_tem)}"
"0",""
"0","askSilly_weather3(c(""臺北市"",""新北市"",""臺中市""),lubridate::now())"
"1","NULL
"
